{
  "endpoint": "POST /api/reflections/toggle",
  "description": "Toggle a reflection's active state for prioritization without deleting the row (soft toggle).",
  "request": {
    "headers": {
      "Content-Type": "application/json"
    },
    "body": {
      "type": "object",
      "required": ["reflection_id", "is_active"],
      "properties": {
        "reflection_id": {
          "type": "string",
          "format": "uuid",
          "description": "Reflection to toggle"
        },
        "is_active": {
          "type": "boolean",
          "description": "New toggle state (true = active for prioritization, false = paused)"
        }
      },
      "example": {
        "reflection_id": "750e8400-e29b-41d4-a716-446655440002",
        "is_active": false
      }
    }
  },
  "responses": {
    "200": {
      "description": "Toggle successful",
      "body": {
        "type": "object",
        "required": ["success", "reflection"],
        "properties": {
          "success": {"type": "boolean", "const": true},
          "reflection": {
            "type": "object",
            "required": ["id", "user_id", "text", "created_at", "is_active_for_prioritization"],
            "properties": {
              "id": {"type": "string", "format": "uuid"},
              "user_id": {"type": "string", "format": "uuid"},
              "text": {"type": "string"},
              "created_at": {"type": "string", "format": "date-time"},
              "is_active_for_prioritization": {"type": "boolean"}
            }
          }
        },
        "example": {
          "success": true,
          "reflection": {
            "id": "750e8400-e29b-41d4-a716-446655440002",
            "user_id": "user-123",
            "text": "Burnt out after launch, need lighter tasks",
            "created_at": "2025-10-20T14:30:00Z",
            "is_active_for_prioritization": false
          }
        }
      }
    },
    "404": {
      "description": "Reflection not found",
      "body": {
        "type": "object",
        "required": ["error"],
        "properties": {
          "error": {"type": "string"}
        },
        "example": {
          "error": "Reflection not found"
        }
      }
    },
    "500": {
      "description": "Server error during toggle",
      "body": {
        "type": "object",
        "required": ["error"],
        "properties": {
          "error": {"type": "string"}
        },
        "example": {
          "error": "Failed to update reflection"
        }
      }
    }
  },
  "validation_rules": {
    "reflection_id": "Must exist in reflections table",
    "user_authorization": "Reflection must belong to authenticated user",
    "data_integrity": "Row is UPDATED, never DELETED (append-only)"
  },
  "database_operations": {
    "query": "UPDATE reflections SET is_active_for_prioritization = $1 WHERE id = $2 AND user_id = $3",
    "no_delete": "DELETE operation is forbidden (violates FR-017, FR-018)"
  }
}
